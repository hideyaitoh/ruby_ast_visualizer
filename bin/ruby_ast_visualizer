#!/usr/bin/env ruby
#
# USAGE:
#
#   ruby_ast_visualizer [-o path/to/file] -e 'array.sort { |a, b| a.to_s <=> b.to_s }'
#
lib_path = File.expand_path('../../lib', __FILE__)
$:.unshift(lib_path)

require 'ruby_ast_visualizer'
require 'ruby_ast_visualizer/version'
require 'optparse'
require 'parser/current'

Version = RubyAstVisualizer::VERSION

options = {}

opt = OptionParser.new("usage: ruby_ast_visualizer [-o output_path] [-n] [-e 'command'] [programfile]")

opt.on('-e', "--eval 'command'") {|v| options[:eval] = v }
opt.on('-n', "--no-image") {|v| options[:no_image] = v }
opt.on('-o', '--output path/to/file (DEFAULT a.png)') {|v| options[:output] = v }

begin
  opt.permute!(ARGV)

  source = options[:eval]

  if source.nil? || source.empty?
    raise unless ARGV.size == 1

    source = File.read(ARGV.shift)
  end

  file_name = options[:output] || 'a.png'

  ast = Parser::CurrentRuby.parse(source)

  puts "\n#{ast}\n"

  exit unless options[:no_image].nil?

  result = RubyAstVisualizer::Core.new(ast).visualize

  result.output(png: file_name)

  puts "\nWrote #{file_name}"
rescue
  puts opt.help

  exit!
end
